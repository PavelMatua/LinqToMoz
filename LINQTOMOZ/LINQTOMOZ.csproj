<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\NuGet.Build.Packaging.0.1.157-dev\build\NuGet.Build.Packaging.props" Condition="Exists('..\packages\NuGet.Build.Packaging.0.1.157-dev\build\NuGet.Build.Packaging.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{24C3AD46-589C-4B2D-B207-56B74852BFF9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LINQTOMOZ</RootNamespace>
    <AssemblyName>LINQTOMOZ</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <PackOnBuild>true</PackOnBuild>
    <Owners>Pavel MATUA</Owners>
    <PackageIconUrl>https://pbs.twimg.com/profile_images/504742247259062272/zImoOPa1_400x400.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/PavelMatua/LinqToMoz</PackageProjectUrl>
    <Summary>LINQ provider to MOZ API</Summary>
    <Title>LINQToMOZ</Title>
    <PackageId>LINQTOMOZ.API</PackageId>
    <PackageVersion>1.0.0.1</PackageVersion>
    <Authors>Pavel MATUA</Authors>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageReleaseNotes>URL Metrics
Link Metrics</PackageReleaseNotes>
    <PackageTags>MOZ MOZSDK LINQTOMOZ LINQ MOZAPI API</PackageTags>
    <Description>LINQ provider to MOZ API</Description>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PackageLicenseUrl>https://github.com/PavelMatua/LinqToMoz/blob/master/LICENSE</PackageLicenseUrl>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <IntermediateOutputPath></IntermediateOutputPath>
    <ConsolePause>true</ConsolePause>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType></DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\LINQTOMOZ.XML</DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.Core" />
    <Reference Include="System.IdentityModel" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Net" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.Http.WebRequest" />
    <Reference Include="System.Security" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Web" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Newtonsoft.Json">
      <HintPath>..\packages\Newtonsoft.Json.10.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Authentication\AuthCalucalation.cs" />
    <Compile Include="Authentication\MozAuth.cs" />
    <Compile Include="Exceptions\CustomMOZException.cs" />
    <Compile Include="Exceptions\Exception.cs" />
    <Compile Include="Exceptions\InvalidQueryException.cs" />
    <Compile Include="Exceptions\StandartHTTPExceptions.cs" />
    <Compile Include="HTTP\HTTPStatusMOZ.cs" />
    <Compile Include="HTTP\HttpWorker.cs" />
    <Compile Include="HTTP\MozURLRequestWorker.cs" />
    <Compile Include="HTTP\MozURLsRequestWorker.cs" />
    <Compile Include="HTTP\ParallelsLinkMetricsWorker.cs" />
    <Compile Include="HTTP\ParallelsURLMetricsWorker.cs" />
    <Compile Include="HTTP\RequestWorker.cs" />
    <Compile Include="IQueryData.cs" />
    <Compile Include="LinkMetrics\LinkFlags.cs" />
    <Compile Include="LinkMetrics\LinkMetrics.cs" />
    <Compile Include="LinkMetrics\LinkMetricsCols.cs" />
    <Compile Include="LinqToMoz\Evaluator.cs" />
    <Compile Include="LinqToMoz\ExpressionTreeHelpers.cs" />
    <Compile Include="LinqToMoz\ExpressionTreeModifier.cs" />
    <Compile Include="LinqToMoz\LinkMetricsFinder.cs" />
    <Compile Include="LinqToMoz\MetricsFinder.cs" />
    <Compile Include="LinqToMoz\MozQueryContext.cs" />
    <Compile Include="LinqToMoz\MozQueryProvider.cs" />
    <Compile Include="LinqToMoz\QueryableMozData.cs" />
    <Compile Include="LinqToMoz\TakeFinder.cs" />
    <Compile Include="LinqToMoz\TypeSystem.cs" />
    <Compile Include="LinqToMoz\URLMetricsFinder.cs" />
    <Compile Include="LinqToMoz\WhereFinder.cs" />
    <Compile Include="MOZService.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="URLMetrics\URLMetrics.cs" />
    <Compile Include="URLMetrics\URLMetricsCols.cs" />
    <Compile Include="URLMetrics\URLMetricsContext.cs" />
    <Compile Include="netfx\System\DateTimeEpochExtensions.cs" />
    <Compile Include="LinqToMoz\JsonCustomConverter.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="license.md" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Import Project="..\packages\NuGet.Build.Packaging.0.1.157-dev\build\NuGet.Build.Packaging.targets" Condition="Exists('..\packages\NuGet.Build.Packaging.0.1.157-dev\build\NuGet.Build.Packaging.targets')" />
</Project>